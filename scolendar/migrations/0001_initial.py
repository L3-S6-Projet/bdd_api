# Generated by Django 3.0.6 on 2020-05-15 12:01

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import scolendar.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('group_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='auth.Group')),
                ('level',
                 models.CharField(choices=[('L1', 'L1'), ('L2', 'L2'), ('L3', 'L3'), ('M1', 'M1'), ('M2', 'M2')],
                                  max_length=2, verbose_name='Niveau')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Nom')),
                ('capacity', models.IntegerField(verbose_name='Capacité')),
            ],
            options={
                'verbose_name': 'Salle',
                'verbose_name_plural': 'Salles',
                'unique_together': {('name', 'capacity')},
            },
        ),
        migrations.CreateModel(
            name='Occupancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Numéro du groupe')),
                ('start_datetime', models.DateTimeField(default=django.utils.timezone.now,
                                                        validators=[scolendar.validators.start_datetime_validator],
                                                        verbose_name='Date et Heure de début')),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600),
                                                  validators=[scolendar.validators.max_duration_validator],
                                                  verbose_name='Durée')),
                ('end_datetime', models.DateTimeField(validators=[scolendar.validators.end_datetime_validator],
                                                      verbose_name='Date et Heure de fin')),
                ('occupancy_type', models.CharField(
                    choices=[('CM', 'CM'), ('TD', 'TD'), ('TP', 'TP'), ('PROJ', 'PROJ'), ('ADM', 'ADM'),
                             ('EXT', 'EXT')], default='CM', max_length=4, verbose_name='Type')),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('deleted', models.BooleanField(default=False, verbose_name='Supprimé')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Classroom',
                                                verbose_name='Salle')),
            ],
            options={
                'verbose_name': 'Occupation',
                'verbose_name_plural': 'Occupations',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Class',
                                             verbose_name='Classe')),
            ],
            options={
                'verbose_name': 'Etudiant',
                'verbose_name_plural': 'Etudiants',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number',
                 models.CharField(max_length=31, validators=[scolendar.validators.phone_number_validator],
                                  verbose_name='Téléphone')),
                ('rank', models.CharField(
                    choices=[('MACO', 'MACO'), ('PROF', 'PROF'), ('PRAG', 'PRAG'), ('PAST', 'PAST'), ('ATER', 'ATER'),
                             ('MONI', 'MONI')], max_length=4, verbose_name='Grade')),
            ],
            options={
                'verbose_name': 'Intervenant',
                'verbose_name_plural': 'Intervenants',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Matière')),
                ('group_count', models.PositiveIntegerField(default=1,
                                                            validators=[django.core.validators.MinValueValidator(1),
                                                                        django.core.validators.MaxValueValidator(100)],
                                                            verbose_name='Nombre de groupes')),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Class',
                                             verbose_name='Classe')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'unique_together': {('_class', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StudentClassTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_to_add',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_to_add',
                                   to='scolendar.Class')),
                ('class_to_remove', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                      related_name='class_to_remove', to='scolendar.Class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Student')),
            ],
        ),
        migrations.CreateModel(
            name='OccupancyModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modification_type',
                 models.CharField(choices=[('INSERT', 'INSERT'), ('EDIT', 'EDIT'), ('DELETE', 'DELETE')], max_length=6,
                                  verbose_name='Type')),
                ('previous_start_datetime',
                 models.DateTimeField(blank=True, null=True, verbose_name='Ancienne date de début')),
                ('previous_duration', models.DurationField(blank=True, null=True, verbose_name='Ancienne durée')),
                ('new_start_datetime',
                 models.DateTimeField(blank=True, null=True, verbose_name='Nouvelle date de début')),
                ('new_duration', models.DurationField(blank=True, null=True, verbose_name='Nouvelle durée')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('occupancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Occupancy',
                                                verbose_name='Occupation')),
            ],
        ),
        migrations.AddField(
            model_name='occupancy',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Subject',
                                    verbose_name='Matière'),
        ),
        migrations.AddField(
            model_name='occupancy',
            name='teacher',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='scolendar.Teacher',
                                    verbose_name='Interevenant'),
        ),
        migrations.CreateModel(
            name='ICalToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Clef')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Création')),
                ('user',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_i_cal_token',
                                      to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Token iCal',
                'verbose_name_plural': 'Tokens iCal',
            },
        ),
        migrations.CreateModel(
            name='StudentSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_number', models.PositiveIntegerField(null=True,
                                                             validators=[django.core.validators.MinValueValidator(1),
                                                                         django.core.validators.MaxValueValidator(100)],
                                                             verbose_name='Numéro de groupe')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Student',
                                              verbose_name='Etudiant')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Subject',
                                              verbose_name='Sujet')),
            ],
            options={
                'verbose_name': 'Répartition des étudiants en groupe',
                'verbose_name_plural': 'Répartitions des étudiants en groupes',
                'unique_together': {('subject', 'student')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='occupancy',
            unique_together={('classroom', 'subject', 'teacher', 'start_datetime')},
        ),
        migrations.CreateModel(
            name='TeacherSubject',
            fields=[
                ('teacher',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False,
                                      to='scolendar.Teacher', verbose_name='Intervenant')),
                ('in_charge', models.BooleanField(default=False, verbose_name='Responsable')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scolendar.Subject',
                                              verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Enseignement',
                'verbose_name_plural': 'Enseignements',
                'unique_together': {('teacher', 'subject')},
            },
        ),
    ]
